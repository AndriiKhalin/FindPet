// <auto-generated />
using System;
using FindPet.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FindPet.API.Migrations
{
    [DbContext(typeof(FindPetDbContext))]
    [Migration("20240527102550_CreateDb")]
    partial class CreateDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FindPet.Domain.Entities.Ad", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateCreateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PetId");

                    b.HasIndex("UserId");

                    b.ToTable("Ads");
                });

            modelBuilder.Entity("FindPet.Domain.Entities.Pet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Breed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCreateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("FinderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("FoundDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FoundLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LostDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LostLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nickname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecialMarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FinderId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Pets");
                });

            modelBuilder.Entity("FindPet.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateCreateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("UserType").HasValue("User");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("FindPet.Domain.Entities.Finder", b =>
                {
                    b.HasBaseType("FindPet.Domain.Entities.User");

                    b.Property<DateTime?>("FindPet")
                        .HasColumnType("datetime2");

                    b.HasDiscriminator().HasValue("Finder");
                });

            modelBuilder.Entity("FindPet.Domain.Entities.Owner", b =>
                {
                    b.HasBaseType("FindPet.Domain.Entities.User");

                    b.Property<bool?>("IsPet")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LostPet")
                        .HasColumnType("datetime2");

                    b.HasDiscriminator().HasValue("Owner");
                });

            modelBuilder.Entity("FindPet.Domain.Entities.Ad", b =>
                {
                    b.HasOne("FindPet.Domain.Entities.Pet", "Pet")
                        .WithMany("Ads")
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("FindPet.Domain.Entities.User", "User")
                        .WithMany("Ads")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Pet");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FindPet.Domain.Entities.Pet", b =>
                {
                    b.HasOne("FindPet.Domain.Entities.Finder", "Finder")
                        .WithMany("Pets")
                        .HasForeignKey("FinderId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FindPet.Domain.Entities.Owner", "Owner")
                        .WithMany("Pets")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Finder");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("FindPet.Domain.Entities.Pet", b =>
                {
                    b.Navigation("Ads");
                });

            modelBuilder.Entity("FindPet.Domain.Entities.User", b =>
                {
                    b.Navigation("Ads");
                });

            modelBuilder.Entity("FindPet.Domain.Entities.Finder", b =>
                {
                    b.Navigation("Pets");
                });

            modelBuilder.Entity("FindPet.Domain.Entities.Owner", b =>
                {
                    b.Navigation("Pets");
                });
#pragma warning restore 612, 618
        }
    }
}
